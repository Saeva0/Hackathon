<Application x:Class="Hackathon.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Hackathon"
             StartupUri="Giris.xaml"
             ShutdownMode="OnLastWindowClose">

    <Application.Resources>

        <!-- GİRİŞ -->

        <Style x:Key="TitleText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="36" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#FFFFFF" />
        </Style>


        <Style x:Key="NormalText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="LineHeight" Value="28" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#FFFFFF" />
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Background" Value="#E6F0F8"/>
            <Setter Property="Foreground" Value="#1e3c72"/>
            <Setter Property="BorderBrush" Value="#1e3c72"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- Tüm TextBox'lar için varsayılan stil -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#E6F0F8"/>
            <Setter Property="Foreground" Value="#1e3c72"/>
            <Setter Property="BorderBrush" Value="#1e3c72"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>


        <Style x:Key="button" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Width" Value="170" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#FDFEFE" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderBrush="White" Padding="15" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Fareyle üzerine gelindiğinde -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2a5298"/>
                </Trigger>

                <!-- Tıklama anı -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#162b57"/>
                </Trigger>

                <!-- Klavye ile fokus (TAB tuşu ile) -->
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="#3a6fc1"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="buttonCircle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="8 0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="30" BorderBrush="#878787" Padding="15" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#d9d9d9" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#c4c4c4" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="imgClose" TargetType="Image">
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="0 13 13 0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="textHint" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="Foreground" Value="#ACB0AF" />
        </Style>


        <Style x:Key="textBox" TargetType="Control">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="Foreground" Value="#878787" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>


        <Style x:Key="mainButton" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="0 20 0 0" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Background" Value="#1e3c72" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="25"
                        BorderBrush="#2a5298"
                        Padding="15"
                        BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <!-- Fare ile üzerine gelince -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2a5298" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>

                <!-- Tıklama anı -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#162b57" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>

                <!-- Klavye ile odaklanma (Tab ile gelince) -->
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="#3a6fc1" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Placeholder -->

        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <!-- Placeholder (Watermarked) TextBox Style -->
        <Style x:Key="WatermarkedTextBoxWithPlaceholder" TargetType="TextBox">
            <Setter Property="Foreground" Value="#1e3c72"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="BorderBrush" Value="#6aa0dc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <TextBlock Text="{TemplateBinding Tag}" 
                                   FontSize="14"
                                   Padding="8"
                                   Foreground="#8899aa"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False"
                                   Visibility="{Binding Text.IsEmpty, 
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Yeni Button Stil -->
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="#3B45DE"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="20"
                                Padding="6">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#505BFF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#1F2AB4"/>
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#44FFFFFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Kapatma Butonu İçin Özel Stil (Fare üzerine gelince kırmızı olur) -->
        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E81123"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SegmentedButtonStyle" TargetType="RadioButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,5"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#22FFFFFF"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#1e3c72"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Kod Doğrulama-->
        <Style x:Key="CodeBoxStyle" TargetType="TextBox">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="MaxLength" Value="1"/>
            <Setter Property="Background" Value="#E6F0F8"/>
            <Setter Property="Foreground" Value="#1e3c72"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#40FFFFFF"/>
        </Style>

        <!-- Admin -->
        <Style x:Key="menuButton" TargetType="Button">
            <Setter Property="Background" Value="#FF2D3D5A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF46597A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF5A6D8C"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Dashboard İstatistik Kartları için Stiller -->
        <Style x:Key="StatCardStyle" TargetType="Border">
            <Setter Property="Background" Value="#1AFFFFFF"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style x:Key="StatCardTitleStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#A0FFFFFF"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style x:Key="StatCardValueStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="48"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
        </Style>
    </Application.Resources>
</Application>
